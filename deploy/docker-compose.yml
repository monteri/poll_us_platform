version: '3.9'

services:
  api:
    build:
      context: .
      dockerfile: ./deploy/Dockerfile
    image: poll_us_platform:${POLL_US_PLATFORM_VERSION:-latest}
    restart: always
    env_file:
    - .env
    depends_on:
      db:
        condition: service_healthy
    environment:
      POLL_US_PLATFORM_HOST: 0.0.0.0
      POLL_US_PLATFORM_DB_HOST: poll_us_platform-db
      POLL_US_PLATFORM_DB_PORT: 5432
      POLL_US_PLATFORM_DB_USER: poll_us_platform
      POLL_US_PLATFORM_DB_PASS: poll_us_platform
      POLL_US_PLATFORM_DB_BASE: poll_us_platform

  db:
    image: postgres:13.8-bullseye
    hostname: poll_us_platform-db
    environment:
      POSTGRES_PASSWORD: "poll_us_platform"
      POSTGRES_USER: "poll_us_platform"
      POSTGRES_DB: "poll_us_platform"
    volumes:
    - poll_us_platform-db-data:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: pg_isready -U poll_us_platform
      interval: 2s
      timeout: 3s
      retries: 40

  migrator:
    image: poll_us_platform:${POLL_US_PLATFORM_VERSION:-latest}
    restart: "no"
    command: alembic upgrade head
    environment:
      POLL_US_PLATFORM_DB_HOST: poll_us_platform-db
      POLL_US_PLATFORM_DB_PORT: 5432
      POLL_US_PLATFORM_DB_USER: poll_us_platform
      POLL_US_PLATFORM_DB_PASS: poll_us_platform
      POLL_US_PLATFORM_DB_BASE: poll_us_platform
    depends_on:
      db:
        condition: service_healthy



volumes:
  poll_us_platform-db-data:
    name: poll_us_platform-db-data
